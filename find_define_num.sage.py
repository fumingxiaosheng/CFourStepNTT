

# This file was *autogenerated* from the file find_define_num.sage
from sage.all_cmdline import *   # import sage library

_sage_const_288482366111684746 = Integer(288482366111684746); _sage_const_576460752303415297 = Integer(576460752303415297); _sage_const_2 = Integer(2); _sage_const_13 = Integer(13); _sage_const_576460752303439873 = Integer(576460752303439873); _sage_const_576460752304439297 = Integer(576460752304439297); _sage_const_576460752308273153 = Integer(576460752308273153); _sage_const_576460752315482113 = Integer(576460752315482113); _sage_const_576460752340123649 = Integer(576460752340123649); _sage_const_576460752364240897 = Integer(576460752364240897); _sage_const_576460752475389953 = Integer(576460752475389953); _sage_const_576460752597024769 = Integer(576460752597024769); _sage_const_576460753024843777 = Integer(576460753024843777); _sage_const_576460753175838721 = Integer(576460753175838721); _sage_const_288230377292562433 = Integer(288230377292562433); _sage_const_288230383802122241 = Integer(288230383802122241); _sage_const_288230385815388161 = Integer(288230385815388161); _sage_const_37048445140799662 = Integer(37048445140799662); _sage_const_459782973201979845 = Integer(459782973201979845); _sage_const_64800917766465203 = Integer(64800917766465203); _sage_const_425015386842055933 = Integer(425015386842055933); _sage_const_18734847765732801 = Integer(18734847765732801); _sage_const_119109113519742895 = Integer(119109113519742895); _sage_const_227584740857897520 = Integer(227584740857897520); _sage_const_477282059544659462 = Integer(477282059544659462); _sage_const_570131728462077067 = Integer(570131728462077067); _sage_const_433594414095420776 = Integer(433594414095420776); _sage_const_219263994987749328 = Integer(219263994987749328); _sage_const_189790554094222112 = Integer(189790554094222112); _sage_const_96649110792683523 = Integer(96649110792683523); _sage_const_250648942594717784 = Integer(250648942594717784); _sage_const_279172744045218282 = Integer(279172744045218282); _sage_const_225865349704673648 = Integer(225865349704673648); _sage_const_238394956950829 = Integer(238394956950829); _sage_const_54612008597396 = Integer(54612008597396); _sage_const_8242615629351 = Integer(8242615629351); _sage_const_16141297350887 = Integer(16141297350887); _sage_const_3760097055997 = Integer(3760097055997); _sage_const_11571974431275 = Integer(11571974431275); _sage_const_328867687796 = Integer(328867687796); _sage_const_2298846063117 = Integer(2298846063117); _sage_const_731868219707 = Integer(731868219707); _sage_const_409596963254 = Integer(409596963254); _sage_const_189266227206 = Integer(189266227206); _sage_const_31864818375 = Integer(31864818375); _sage_const_92067739764 = Integer(92067739764); _sage_const_5214432335 = Integer(5214432335); _sage_const_734084005 = Integer(734084005); _sage_const_3351406780 = Integer(3351406780); _sage_const_717004697 = Integer(717004697); _sage_const_0 = Integer(0); _sage_const_17 = Integer(17); _sage_const_12 = Integer(12)# 基于本身的数找2n次本原单位根

x = _sage_const_288482366111684746 
p = _sage_const_576460752303415297 
F = GF(p)
a = F(x)

# 检查a是否有平方根
if a.is_square():
    y = a.sqrt()
    print(y)
else:
    print("x is not a quadratic residue modulo p.")

exp = _sage_const_2 **_sage_const_13 
print((y**exp ) % p)


primes=[_sage_const_576460752303415297 , _sage_const_576460752303439873 , _sage_const_576460752304439297 ,
            _sage_const_576460752308273153 , _sage_const_576460752308273153 , _sage_const_576460752315482113 ,
            _sage_const_576460752315482113 , _sage_const_576460752340123649 , _sage_const_576460752364240897 ,
            _sage_const_576460752475389953 , _sage_const_576460752597024769 , _sage_const_576460753024843777 ,
            _sage_const_576460753175838721 , _sage_const_288230377292562433 , _sage_const_288230383802122241 ,
            _sage_const_288230385815388161 , _sage_const_288230385815388161 ]

omega=[_sage_const_288482366111684746 , _sage_const_37048445140799662 ,  _sage_const_459782973201979845 ,
            _sage_const_64800917766465203 ,  _sage_const_425015386842055933 , _sage_const_18734847765732801 ,
            _sage_const_119109113519742895 , _sage_const_227584740857897520 , _sage_const_477282059544659462 ,
            _sage_const_570131728462077067 , _sage_const_433594414095420776 , _sage_const_219263994987749328 ,
            _sage_const_189790554094222112 , _sage_const_96649110792683523 , _sage_const_250648942594717784 ,
            _sage_const_279172744045218282 , _sage_const_225865349704673648 ]

psi=[_sage_const_238394956950829 , _sage_const_54612008597396 , _sage_const_8242615629351 , _sage_const_16141297350887 ,
            _sage_const_3760097055997 ,   _sage_const_11571974431275 , _sage_const_328867687796 ,  _sage_const_2298846063117 ,
            _sage_const_731868219707 ,    _sage_const_409596963254 ,   _sage_const_189266227206 ,  _sage_const_31864818375 ,
            _sage_const_92067739764 , _sage_const_5214432335 , _sage_const_734084005 , _sage_const_3351406780 , _sage_const_717004697 ]

for i in range(_sage_const_0 ,_sage_const_17 ):
    exp = _sage_const_2 **(i + _sage_const_12 )
    print(power_mod(omega[i],exp,primes[i]),power_mod(psi[i],exp,primes[i]))
print("check all done")

# 在 源码中，都使用的是omega作为本原单位根，因此，在这个给出其二次本原单位根

omega_2n = []
for i in range(_sage_const_0 ,_sage_const_17 ):
    exp = _sage_const_2 **(i + _sage_const_13 )
    F = GF(primes[i])
    a = F(omega[i])
    if a.is_square():
        y = a.sqrt()
        print(y)
        omega_2n.append(y)
    else:
        print("x is not a quadratic residue modulo p.")
    print(power_mod(omega_2n[i],exp,primes[i]))

print(omega_2n)

